/*
 * This source file was generated by the Gradle 'init' task
*/
package org.example;

import org.example.values.CannedWalrusFood;
import org.example.values.Walrus;
import org.example.values.WalrusFood;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class WalrusTest {
    
    private FeedsWalrus feedsWalrus;
    private Walrus walrus;
    
    @Before
    public void setUp() {
        feedsWalrus = new FeedsWalrus();
        walrus = new Walrus();
    }
    
    // Write a test to see how much a Walrus can eat
    @Test
    public void testWalrusEatingCapacity() {
        int foodItemsToTest = 100;
        
        for (int i = 0; i < foodItemsToTest; i++) {
            WalrusFood food = new WalrusFood();
            CannedWalrusFood can = new CannedWalrusFood(food);
            feedsWalrus.feed(walrus, can);
            assertTrue(walrus.hasEaten(food));
        }
    }
    
    // Write a test to check if a Walrus gets the right food
    @Test
    public void testWalrusGetsCorrectFood() {
        WalrusFood specificFood = new WalrusFood();
        CannedWalrusFood can = new CannedWalrusFood(specificFood);
        
        feedsWalrus.feed(walrus, can);
        assertTrue(walrus.hasEaten(specificFood));
        
        WalrusFood differentFood = new WalrusFood();
        assertFalse(walrus.hasEaten(differentFood));
    }
    
    // Write a test to check opening a can will return food
    @Test
    public void testOpeningCanReturnsFood() {
        WalrusFood food = new WalrusFood();
        CannedWalrusFood can = new CannedWalrusFood(food);
        OpensCan opensCan = new OpensCan();
        
        WalrusFood extractedFood = opensCan.open(can);
        assertEquals(food, extractedFood);
        assertNull(can.extractContents());
    }
    
    // Write a test to check on how a Walrus can eat
    @Test
    public void testWalrusEatingProcess() {
        WalrusFood food = new WalrusFood();
        CannedWalrusFood can = new CannedWalrusFood(food);
        
        assertFalse(walrus.hasEaten(food));
        feedsWalrus.feed(walrus, can);
        assertTrue(walrus.hasEaten(food));
        
        feedsWalrus.feed(walrus, new CannedWalrusFood(food));
        assertTrue(walrus.hasEaten(food));
    }
    
    // Write a test making a Walrus accept non-Walrus food
    @Test
    public void testWalrusAcceptsDifferentFoodTypes() {
        class SpecialWalrusFood extends WalrusFood {}
        
        WalrusFood regularFood = new WalrusFood();
        SpecialWalrusFood specialFood = new SpecialWalrusFood();
        
        CannedWalrusFood regularCan = new CannedWalrusFood(regularFood);
        CannedWalrusFood specialCan = new CannedWalrusFood(specialFood);
        
        feedsWalrus.feed(walrus, regularCan);
        feedsWalrus.feed(walrus, specialCan);
        
        assertTrue(walrus.hasEaten(regularFood));
        assertTrue(walrus.hasEaten(specialFood));
    }
}
