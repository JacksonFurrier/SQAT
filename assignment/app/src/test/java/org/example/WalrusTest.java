/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import org.junit.Test;
import static org.junit.Assert.*;
import org.example.values.CannedWalrusFood;
import org.example.values.Walrus;
import org.example.values.WalrusFood;
import org.junit.Before;

public class WalrusTest {
    @Test public void appHasAGreeting() {
    }
    Walrus walrus;
    FeedsWalrus feedsWalrus;
    OpensCan canOpener;
 
    @Before
    public void init() {
        walrus = new Walrus();
        feedsWalrus = new FeedsWalrus();
        canOpener = new OpensCan();
    }
 
    @Test
    public void testWalrusMaxEatingCapacity() {
        for (int i = 0; i < 5000; i++) {
            WalrusFood food = new WalrusFood();
            walrus.addToStomach(food);
            assertTrue("The maximum amount a walrus can eat is " + i , walrus.hasEaten(food));
        }
    }
 
    @Test
    public void testWalrusEatsCorrectFood() {
        WalrusFood food = new WalrusFood();
        walrus.addToStomach(food);
        assertTrue(walrus.hasEaten(food));
    }
 
    @Test
    public void verifyCannedFoodReception() {
        WalrusFood food = new WalrusFood();
        CannedWalrusFood cannedFood = new CannedWalrusFood(food);
        walrus.addToStomach(canOpener.open(cannedFood));
        assertTrue(walrus.hasEaten(food));
    }
 
    @Test
    public void testCanOpeningReturnsFood() {
        WalrusFood food = new WalrusFood();
        CannedWalrusFood cannedFood = new CannedWalrusFood(food);
        WalrusFood openedFood = canOpener.open(cannedFood);
        assertNotNull(openedFood);
        assertEquals(WalrusFood.class, openedFood.getClass());
    }
 
    @Test
    public void testBasicFoodConsumption() {
        WalrusFood food = new WalrusFood();
        walrus.addToStomach(food);
        assertTrue(walrus.hasEaten(food));
    }
 
    @Test
    public void validateFeedingViaFeeder() {
        WalrusFood food = new WalrusFood();
        CannedWalrusFood cannedFood = new CannedWalrusFood(food);
        feedsWalrus.feed(walrus, cannedFood);
        assertTrue(walrus.hasEaten(food));
    }

    @Test
    public void checkCannedFoodConsumption() {
        WalrusFood food = new WalrusFood();
        CannedWalrusFood cannedFood = new CannedWalrusFood(food);
        walrus.addToStomach(canOpener.open(cannedFood));
        assertTrue(walrus.hasEaten(food));
    }

    @Test
    public void handleNonWalrusFoodType() {
        class NonWalrusFood extends WalrusFood {}
        NonWalrusFood nFood = new NonWalrusFood();
        walrus.addToStomach(nFood);
        assertTrue(walrus.hasEaten(nFood));
    }

    @Test
    public void handleNullFoodType() {
        walrus.addToStomach(null);
        assertTrue(walrus.hasEaten(null));
    }
}



 
