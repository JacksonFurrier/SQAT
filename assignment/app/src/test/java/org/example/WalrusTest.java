/*
 * This source file was generated by the Gradle 'init' task
 */

package org.example;

import org.example.values.Walrus;
import org.example.values.WalrusFood;
import org.example.values.CannedWalrusFood;

import org.junit.Test;

import static org.junit.Assert.*;

public class WalrusTest {
    @Test
    public void appHasAGreeting() {}

    @Test
    public void testHowMuchWalrusCanEat() {

        Walrus walrus = new Walrus();

        for (int i = 0; i < 180; i++) {

            WalrusFood walrusFood = new WalrusFood();

            walrus.addToStomach(walrusFood);
            assertTrue(walrus.hasEaten(walrusFood));
            System.out.println("Walrus could successfully eat the food!");
        }
    }

    @Test
    public void testWalrusGettingProperFood() {

        Walrus walrus = new Walrus();
        WalrusFood wf = new WalrusFood();
        WalrusFood wf2 = new WalrusFood();
        CannedWalrusFood cannedWalrusFood = new CannedWalrusFood(wf2);

        walrus.addToStomach(wf);
        assertTrue(walrus.hasEaten(wf));
        assertFalse(walrus.hasEaten(wf2));

        FeedsWalrus fw = new FeedsWalrus();

        fw.feed(walrus, cannedWalrusFood);
        assertTrue(walrus.hasEaten(wf2));
        System.out.println("Walrus received the proper food!");
    }

    @Test
    public void testWalrusEatingPerformance() {

        Walrus walrus = new Walrus();
        WalrusFood wf = new WalrusFood();

        walrus.addToStomach(wf);
        assertTrue(walrus.hasEaten(wf));
        System.out.println("Walrus can eat more!");

        WalrusFood wf2 = new WalrusFood();
        CannedWalrusFood cwf = new CannedWalrusFood(wf2);
        OpensCan oc = new OpensCan();

        walrus.addToStomach(oc.open(cwf));
        assertTrue(walrus.hasEaten(wf2));
        System.out.println("Walrus can eat more after the can has been opened!");
    }

    @Test
    public void testFoodReturning() {

        WalrusFood walrusFood = new WalrusFood();
        CannedWalrusFood cwf = new CannedWalrusFood(walrusFood);
        OpensCan oc = new OpensCan();
        WalrusFood wf2 = oc.open(cwf);

        assertEquals(walrusFood, wf2);
        System.out.println("Food returned after having opened the can!");
    }

    @Test
    public void testWalrusGettingWrongFood() {

        Walrus walrus = new Walrus();
        NonWalrusFood nonWalrusFood = new NonWalrusFood();

        walrus.addToStomach(nonWalrusFood);
        assertTrue(walrus.hasEaten(nonWalrusFood));
        System.out.println("Walrus is able to eat the food that is not neccessarily for 'him'.");
    }

    private class NonWalrusFood extends WalrusFood {
    }
}