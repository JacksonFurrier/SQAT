/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import org.example.values.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class WalrusTest {
    @Test
    public void testWalrusCanEatMultipleFoods() {
        Walrus gary = new Walrus();
        WalrusFood fish = new WalrusFood();
        WalrusFood squid = new WalrusFood();

        gary.addToStomach(fish);
        gary.addToStomach(squid);

        assertTrue(gary.hasEaten(fish));
        assertTrue(gary.hasEaten(squid));
    }

    @Test
    public void testWalrusGetsCorrectFoodFromCan() {
        WalrusFood shrimp = new WalrusFood();
        CannedWalrusFood can = new CannedWalrusFood(shrimp);
        OpensCan opener = new OpensCan();

        WalrusFood extracted = opener.open(can);
        assertEquals(shrimp, extracted);
    }

    @Test
    public void testOpeningCanExtractsFood() {
        WalrusFood mussel = new WalrusFood();
        CannedWalrusFood can = new CannedWalrusFood(mussel);
        OpensCan opener = new OpensCan();

        WalrusFood food = opener.open(can);
        assertEquals(mussel, food);
        assertNull(can.extractContents());  // should be null after opening
    }

    @Test
    public void testFeedsWalrusViaCan() {
        Walrus gary = new Walrus();
        WalrusFood clam = new WalrusFood();
        CannedWalrusFood can = new CannedWalrusFood(clam);
        FeedsWalrus feeder = new FeedsWalrus();

        feeder.feed(gary, can);
        assertTrue(gary.hasEaten(clam));
    }

    @Test
    public void testWalrusDoesNotEatNonWalrusFood() {
        Walrus gary = new Walrus();
        WalrusFood junk = new WalrusFood();  // not fed via can
        assertFalse(gary.hasEaten(junk));
    }
}
